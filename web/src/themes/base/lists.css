/* List styles
 *
 * Schema: [List](../../schema/List.yaml)
 * Purpose: Ordered and unordered lists with nested list support.
 *
 * DOM Structure:
 * <stencila-list id=xxx depth=N ancestors=Parent order=Unordered>
 *     <ul slot=items>
 *         <stencila-list-item id=xxx depth=N+1 ancestors=Parent.List>
 *             <li slot=content>
 *                 <stencila-paragraph id=xxx depth=N+2 ancestors=Parent.List.ListItem>
 *                     <p slot=content>
 *                         <stencila-text id=xxx depth=N+3 ancestors=Parent.List.ListItem.Paragraph>List item text</stencila-text>
 *                     </p>
 *                 </stencila-paragraph>
 *             </li>
 *         </stencila-list-item>
 *     </ul>
 * </stencila-list>
 *
 * Key Attributes:
 * - order: List type from [ListOrder](../../schema/ListOrder.yaml) (Unordered, Ascending, Descending)
 *
 * Slots:
 * - items: Contains the HTML list element (ul or ol) with list items
 *
 * Notes:
 * - List order determines HTML element: Unordered → ul, Ascending/Descending → ol
 * - Each list item can contain one or Block nodes but often has a single Paragraph
 * - Supports nested lists with different marker styles
 *
 * Examples: examples/conversion/list/list.dom.html
 */

:root {
    --list-spacing: var(--content-spacing);
    --list-spacing-nested: calc(var(--content-spacing) * 0.25);

    --list-indent: calc(var(--content-spacing) * 0.75);
    --list-indent-nested: calc(var(--content-spacing) * 0.25);

    --list-item-spacing: calc(var(--list-spacing) * 0.25);

    --list-marker-gap: var(--space-2);
    --list-marker-color: var(--text-color-muted);
    --list-marker-color-dark: var(--text-color-muted-dark);
    --list-marker-unordered: disc;
    --list-marker-ordered: decimal;
    --list-marker-nested-unordered: circle;
    --list-marker-nested-ordered: lower-alpha;
}

stencila-list {
    display: block;

    ul,
    ol {
        /* Browser normalization */
        margin: 0;
        padding: 0;

        margin-top: var(--list-spacing);
        padding-left: var(--list-indent);
        list-style-position: outside;
    }

    ul {
        list-style-type: var(--list-marker-unordered);
    }

    ol {
        list-style-type: var(--list-marker-ordered);
    }

    /* Nested lists */

    ul ul,
    ol ol,
    ul ol,
    ol ul {
        margin-top: var(--list-spacing-nested);
        margin-left: var(--list-indent-nested);
    }

    ul ul,
    ol ul {
        list-style-type: var(--list-marker-nested-unordered);
    }

    ol ol,
    ul ol {
        list-style-type: var(--list-marker-nested-ordered);
    }

    stencila-list-item {
        li {
            margin-bottom: var(--list-item-spacing);
            line-height: var(--text-line-height);
            padding-left: var(--list-marker-gap);

            &::marker {
                color: var(--list-marker-color);
            }

            /* Paragraphs spacing: use list-item spacing instead of full
             * paragraph spacing to maintain visual hierarchy */
            stencila-paragraph p {
                margin-top: var(--list-item-spacing);
            }
        }
    }
}

/* Dark Mode Application - System Preference */
@media (prefers-color-scheme: dark) {
    :root:not([data-color-scheme="light"]) {
        --list-marker-color: var(--list-marker-color-dark);
    }
}

/* Dark Mode Application - Explicit User Choice */
:root[data-color-scheme="dark"] {
    --list-marker-color: var(--list-marker-color-dark);
}

@media print {
    stencila-list {
        li {
            /* Ensure proper list item breaks for print */
            page-break-inside: avoid;
            break-inside: avoid;
        }

        /* Optimize nested lists for print */
        ul ul,
        ol ol,
        ul ol,
        ol ul {
            margin-top: calc(var(--list-spacing) * 0.5);
        }
    }
}