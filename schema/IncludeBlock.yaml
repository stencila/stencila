title: IncludeBlock
'@id': stencila:IncludeBlock
extends: Executable
category: flow
description: Include block content from an external source (e.g. file, URL).
status: under-development
markdown:
  derive: false
proptest: {}
required:
  - source
core:
  - mediaType
  - select
  - content
properties:
  source:
    '@id': stencila:source
    description: The external source of the content, a file path or URL.
    type: string
    strip: [code]
    patch:
      formats: [md]
    proptest:
      min:
        description: Generate a fixed path.
        value: String::from("path/to/source.file")
      low:
        description: |
          Generate a random string with up to 30 alphanumeric characters, forward slashes,
          hyphens, and dots (exclude characters in such as underscores an asterisks which
          have semantic meaning in Markdown).
        regex: '[a-zA-Z0-9/\-.]{1,30}'
      high:
        description: |
          Generate a random string of up to 100 characters (excluding control characters).
        regex: '[^\p{C}]{1,100}'
      max:
        description: Generate an arbitrary string.
        strategy: String::arbitrary()
  mediaType:
    '@id': schema:encodingFormat
    aliases:
      - encodingFormat
    description: Media type of the source content.
    $comment: |
      Typically expressed using a file name extensions (e.g. `md`) or a
      MIME type (e.g. `text/md`).
    strip: [code]
    type: string
  select:
    '@id': stencila:select
    description: A query to select a subset of content from the source
    strip: [code]
    type: string
  content:
    '@id': stencila:content
    description: The structured content decoded from the source.
    $comment: |
      Assumes that included content will be block content i.e. that there will be limited
      instances where a user would want to use an `Include` node to transclude inline content.
    type: array
    items:
      $ref: Block
    strip: [output]
    patch:
      # Do not merge content since that is derived from `source`
      formats: []
    dom:
      elem: div
