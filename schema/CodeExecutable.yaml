title: CodeExecutable
'@id': stencila:CodeExecutable
extends: Executable
category: code
abstract: true
description: Abstract base type for executable code nodes (e.g. `CodeChunk`).
$comment: |
  Adds properties to the base `Executable` node type that are necessary for executable code.
  The added properties are the same as for static code nodes. Both `code` and `programmingLanguage` are required.
required:
  - code
core:
  - programmingLanguage
properties:
  code:
    '@id': stencila:code
    description: The code.
    $ref: Cord
    strip: [code]
    patch:
      formats: [md]
    jats:
      content: true
    proptest:
      min:
        description: Generate a simple fixed string of code.
        value: Cord::new("code")
      low:
        description: |
          Generate a random string of up to 10 alphanumeric characters (excludes whitespace which
          can be problematic in Markdown).
        strategy: r"[a-zA-Z0-9]{1,10}".prop_map(Cord::new)
      high:
        description: |
          Generate a random string of up to 100 characters (excluding control characters).
        strategy: r"[^\p{C}]{1,100}".prop_map(Cord::new)
      max:
        description: Generate an arbitrary string.
        strategy: String::arbitrary().prop_map(Cord::new)
  programmingLanguage:
    '@id': schema:programmingLanguage
    description: The programming language of the code.
    type: string
    strip: [code]
    patch:
      formats: [md]
    jats:
      attr: language
    proptest:
      min:
        description: Generate a simple fixed string.
        value: Some(String::from("lang"))
      low:
        description: Generate one of the well known programming language short names.
        strategy: option::of(r"(cpp)|(js)|(py)|(r)|(ts)")
      high:
        description: Generate a random string of up to 10 alphanumeric characters.
        strategy: option::of(r"[a-zA-Z0-9]{1,10}")
      max:
        description: Generate an arbitrary string.
        strategy: option::of(String::arbitrary())
  authors:
    '@id': schema:author
    description: The authors of the executable code.
    type: array
    items:
      $ref: Author
    strip: [metadata]
    serde:
      deserializeWith: option_one_or_many_string_or_object
    dom:
      elem: span
