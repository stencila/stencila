title: MediaObject
'@id': schema:MediaObject
extends: CreativeWork
category: works
description: |
  A media object, such as an image, video, or audio object embedded in a web page or a
  downloadable dataset.
$comment: |
  This is not an abstract type and so can be instantiated as an inline content node.
  However, prefer to use `AudioObject`, `ImageObject`, or `VideoObject` when the
  type of media is known.
jats:
  elem: inline-media
  special: true
required:
  - contentUrl
core:
  - mediaType
properties:
  bitrate:
    '@id': schema:bitrate
    description: |
      Bitrate in megabits per second (Mbit/s, Mb/s, Mbps).
    type: number
  contentSize:
    '@id': schema:contentSize
    description: |
      File size in megabits (Mbit, Mb).
    type: number
  contentUrl:
    '@id': schema:contentUrl
    description: |
      URL for the actual bytes of the media object, for example the image file or video file.
    $comment: |
      To allow for file paths, including possibly erroneous paths, neither `format` nor `pattern`
      JSON Schema keywords are used here, or on `embedUrl`.
      
      `contentUrl` is required since it seems to make little sense to have a `MediaObject`
      that does not have it.

      See https://github.com/schemaorg/schemaorg/issues/462#issuecomment-98243384
      for why it is useful to have both `contentUrl` and `embedUrl` in addition to `url`.
    type: string
    html:
      attr: src
    patch:
      formats: [md]
    proptest:
      min:
        description: Generate a fixed URL.
        value: String::from("https://example.org/image.png")
      low:
        description: Generate a random URL.
        regex: https://\w+\.\w+/\w+\.png
      high:
        description: Generate a random string of up to 100 alphanumeric characters.
        regex: '[a-zA-Z0-9]{1,100}'
      max:
        description: Generate an arbitrary string.
        strategy: String::arbitrary()
  embedUrl:
    '@id': schema:embedUrl
    description: |
      URL that can be used to embed the media on a web page via a specific media player.
    type: string
  mediaType:
    '@id': schema:encodingFormat
    aliases:
      - encodingFormat
    description: IANA media type (MIME type).
    $comment: |
      This property is more restrictive than https://schema.org/encodingFormat which
      expects either Text or URL for this property. This schema expects a media type e.g. `text/html`
      as listed at http://www.iana.org/assignments/media-types/media-types.xhtml.
    type: string
    pattern: '^\w+/[-+.\w]+$'
