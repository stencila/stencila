title: List
'@id': schema:ItemList
nick: lst
extends: Entity
category: prose
description: A list of items.
$comment: |
  This is an implementation, and renaming, of schema.org [`ItemList`](https://schema.org/ItemList).
  Renaming was done as `List` was considered a more developer friendly alternative. Similarly,
  schema.org properties `itemListElement` and `itemListOrder` were renamed to `items` and `order`.
  Note that, as with every other such renaming in Stencila Schema, a mapping between names is
  defined and it is trivial to save Stencila Schema documents using the schema.org vocabulary if so desired.
dom:
  derive: false
html:
  special: true
jats:
  elem: list
markdown:
  derive: false
proptest: {}
required:
  - items
  - order
properties:
  items:
    '@id': 'schema:itemListElement'
    description: The items in the list.
    type: array
    items:
      $ref: ListItem
    walk: true
    patch:
      formats: [md]
    jats:
      content: true
    proptest:
      min:
        description: Generate a single, arbitrary, list item.
        strategy: vec(ListItem::arbitrary(), size_range(1..=1))
      low:
        description: Generate up to two, arbitrary, list items.
        strategy: vec(ListItem::arbitrary(), size_range(1..=2))
      high:
        description: Generate up to four, arbitrary, list items.
        strategy: vec(ListItem::arbitrary(), size_range(1..=4))
      max:
        description: Generate up to eight, arbitrary, list items.
        strategy: vec(ListItem::arbitrary(), size_range(1..=8))
  order:
    '@id': 'schema:itemListOrder'
    description: The ordering of the list.
    $ref: ListOrder
    patch:
      formats: [md]
    jats:
      attr: list-type
    proptest:
      min:
        description: Always generate an unordered list.
        value: ListOrder::Unordered
      low:
        description: Randomly generate either and unordered or ascending list.
        strategy: prop_oneof![Just(ListOrder::Unordered),Just(ListOrder::Ascending)]
      high:
        description: Generate an arbitrary list ordering.
        strategy: ListOrder::arbitrary()
  authors:
    '@id': schema:author
    description: The authors of the list.
    type: array
    items:
      $ref: Author
    strip: [metadata]
    serde:
      deserializeWith: option_one_or_many_string_or_object
