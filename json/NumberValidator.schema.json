{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/NumberValidator.schema.json",
  "@id": "stencila:NumberValidator",
  "title": "NumberValidator",
  "extends": [
    "Entity"
  ],
  "category": "data",
  "description": "A validator specifying the constraints on a numeric node.",
  "$comment": "A node will be valid if it is a number that meets the `maximum`, `multipleOf` etc properties.\nAnalogous to the JSON Schema `number` validation [type](https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.1.1).\nNote that the `IntegerValidator` type extends this validator with the additional\nconstraint that the number have no fractional part.\n",
  "markdown": {
    "derive": false
  },
  "required": [
    "type"
  ],
  "core": [
    "id",
    "minimum",
    "exclusiveMinimum",
    "maximum",
    "exclusiveMaximum",
    "multipleOf"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "minimum": {
      "@id": "stencila:minimum",
      "description": "The inclusive lower limit for a numeric node.",
      "$comment": "A number is valid if it is greater than, or exactly equal to, `minimum`.\n",
      "type": "number"
    },
    "exclusiveMinimum": {
      "@id": "stencila:exclusiveMinimum",
      "description": "The exclusive lower limit for a numeric node.",
      "$comment": "A number is valid only if it has a value greater than (not equal to) `exclusiveMinimum`.\n",
      "aliases": [
        "exclusive-minimum",
        "exclusive_minimum"
      ],
      "type": "number"
    },
    "maximum": {
      "@id": "stencila:maximum",
      "description": "The inclusive upper limit for a numeric node.",
      "$comment": "A number is valid if it is less than, or exactly equal to, `maximum`.\n",
      "type": "number"
    },
    "exclusiveMaximum": {
      "@id": "stencila:exclusiveMaximum",
      "description": "The exclusive upper limit for a numeric node.",
      "$comment": "A number is valid only if it has a value less than (not equal to) `exclusiveMaximum`.\n",
      "aliases": [
        "exclusive-maximum",
        "exclusive_maximum"
      ],
      "type": "number"
    },
    "multipleOf": {
      "@id": "stencila:multipleOf",
      "description": "A number that a numeric node must be a multiple of.",
      "$comment": "A number is valid only if division by this value results in an integer.\n",
      "aliases": [
        "multiple-of",
        "multiple_of"
      ],
      "type": "number",
      "exclusiveMinimum": 0.0
    }
  }
}