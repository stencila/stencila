{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/ExecutionRequired.schema.json",
  "@id": "stencila:ExecutionRequired",
  "title": "ExecutionRequired",
  "extends": [
    "Enumeration"
  ],
  "category": "flow",
  "description": "Whether, and why, the execution of a node is required or not.",
  "required": [
    "type"
  ],
  "core": [
    "id"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "alternateNames": {
      "@id": "schema:alternateName",
      "description": "Alternate names (aliases) for the item.",
      "aliases": [
        "alternate-names",
        "alternate_names",
        "alternateName",
        "alternate-name",
        "alternate_name"
      ],
      "strip": [
        "metadata"
      ],
      "serde": {
        "deserializeWith": "option_csv_or_array"
      },
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "description": {
      "@id": "schema:description",
      "description": "A description of the item.",
      "strip": [
        "metadata"
      ],
      "$ref": "Text.schema.json"
    },
    "identifiers": {
      "@id": "schema:identifier",
      "description": "Any kind of identifier for any kind of Thing.",
      "$comment": "Some identifiers have specific properties e.g the `issn` property for\nthe `Periodical` type. These should be used in preference to this\nproperty which is intended for identifiers that do not yet have a\nspecific property. Identifiers can be represented as strings, but\nusing a `PropertyValue` will usually be better because it allows\nfor `propertyID` (i.e. the type of identifier).\n",
      "aliases": [
        "identifier"
      ],
      "strip": [
        "metadata"
      ],
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "PropertyValue.schema.json"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "images": {
      "@id": "schema:image",
      "description": "Images of the item.",
      "aliases": [
        "image"
      ],
      "strip": [
        "metadata"
      ],
      "type": "array",
      "items": {
        "$ref": "ImageObject.schema.json"
      }
    },
    "name": {
      "@id": "schema:name",
      "description": "The name of the item.",
      "strip": [
        "metadata"
      ],
      "type": "string"
    },
    "url": {
      "@id": "schema:url",
      "description": "The URL of the item.",
      "strip": [
        "metadata"
      ],
      "type": "string",
      "format": "uri"
    }
  },
  "anyOf": [
    {
      "@id": "stencila:No",
      "description": "No re-execution is required, the semantics of the node and its dependencies has not changed\nsince it was last executed\n",
      "const": "No"
    },
    {
      "@id": "stencila:NeverExecuted",
      "description": "Execution is required because the node has never been executed (or any previous\nexecution was not persisted in its state).\n",
      "const": "NeverExecuted"
    },
    {
      "@id": "stencila:StateChanged",
      "description": "Re-execution is required because the state of the node (e.g. source code) has changed\nsince it was last executed and no semantic digest is available to determine if semantics changed.\n",
      "const": "StateChanged"
    },
    {
      "@id": "stencila:SemanticsChanged",
      "description": "Re-execution is required because the semantics of the node has changed since it was\nlast executed.\n",
      "const": "SemanticsChanged"
    },
    {
      "@id": "stencila:DependenciesChanged",
      "description": "Re-execution is required because the semantics of one or more dependencies (including\ntransitive dependencies) changed since it was last executed.\n",
      "const": "DependenciesChanged"
    },
    {
      "@id": "stencila:DependenciesFailed",
      "description": "Re-execution is required because one or more dependencies (including transitive dependencies)\nfailed when it was last executed.\n",
      "const": "DependenciesFailed"
    },
    {
      "@id": "stencila:ExecutionFailed",
      "description": "Re-execution is required because execution failed (there were errors or exceptions) the\nlast time it was executed.\n",
      "const": "ExecutionFailed"
    },
    {
      "@id": "stencila:ExecutionCancelled",
      "description": "Re-execution may be required because execution was pending but was cancelled.\n",
      "const": "ExecutionCancelled"
    },
    {
      "@id": "stencila:ExecutionInterrupted",
      "description": "Re-execution is required because execution was interrupted the last time it was executed.\n",
      "const": "ExecutionInterrupted"
    },
    {
      "@id": "stencila:KernelRestarted",
      "description": "Re-execution is required because the kernel that the node was last executed in\nwas restarted.\n",
      "const": "KernelRestarted"
    },
    {
      "@id": "stencila:UserRequested",
      "description": "Execution is required because it was explicitly requested by a user.",
      "const": "UserRequested"
    }
  ],
  "default": "NeverExecuted"
}