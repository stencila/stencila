{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/ReplaceBlock.schema.json",
  "@id": "stencila:ReplaceBlock",
  "title": "ReplaceBlock",
  "nick": "rpb",
  "extends": [
    "SuggestionBlock"
  ],
  "category": "edits",
  "description": "A suggestion to replace some block content with new block content.",
  "markdown": {
    "derive": false
  },
  "proptest": {},
  "required": [
    "type",
    "content",
    "replacement"
  ],
  "core": [
    "id",
    "suggestionStatus",
    "authors",
    "provenance",
    "executionDuration",
    "executionEnded",
    "feedback"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "suggestionStatus": {
      "@id": "stencila:suggestionStatus",
      "description": "The status of the suggestion including whether it is the original, or is accepted, or rejected.",
      "aliases": [
        "suggestion-status",
        "suggestion_status"
      ],
      "strip": [
        "metadata"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "$ref": "SuggestionStatus.schema.json"
    },
    "authors": {
      "@id": "schema:author",
      "description": "The authors of the suggestion",
      "aliases": [
        "author"
      ],
      "strip": [
        "authors"
      ],
      "serde": {
        "default": false,
        "deserializeWith": "option_one_or_many_string_or_object"
      },
      "dom": {
        "elem": "span"
      },
      "type": "array",
      "items": {
        "$ref": "Author.schema.json"
      }
    },
    "provenance": {
      "@id": "stencila:provenance",
      "description": "A summary of the provenance of the content within the suggestion.",
      "strip": [
        "provenance"
      ],
      "dom": {
        "elem": "span"
      },
      "type": "array",
      "items": {
        "$ref": "ProvenanceCount.schema.json"
      }
    },
    "executionDuration": {
      "@id": "stencila:executionDuration",
      "description": "Time taken to generate the suggestion.",
      "aliases": [
        "execution-duration",
        "execution_duration"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "with": "Duration::to_dom_attr"
      },
      "$ref": "Duration.schema.json"
    },
    "executionEnded": {
      "@id": "stencila:executionEnded",
      "description": "The timestamp when the generation ended.",
      "aliases": [
        "execution-ended",
        "execution_ended"
      ],
      "strip": [
        "execution",
        "timestamps"
      ],
      "dom": {
        "with": "Timestamp::to_dom_attr"
      },
      "$ref": "Timestamp.schema.json"
    },
    "feedback": {
      "@id": "stencila:feedback",
      "description": "Feedback on the suggestion",
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "type": "string"
    },
    "content": {
      "@id": "stencila:content",
      "description": "The content that is suggested to be inserted, modified, replaced, or deleted.",
      "dom": {
        "elem": "div"
      },
      "proptest": {
        "min": {
          "description": "Generate a single fixed paragraph.",
          "value": "vec![p([t(\"text\")])]"
        },
        "low": {
          "description": "Generate a single arbitrary, non-recursive, block node",
          "strategy": "vec_blocks_non_recursive(1)"
        },
        "high": {
          "description": "Generate up to two arbitrary, non-recursive, block nodes",
          "strategy": "vec_blocks_non_recursive(2)"
        },
        "max": {
          "description": "Generate up to four arbitrary, non-recursive, block nodes",
          "strategy": "vec_blocks_non_recursive(4)"
        }
      },
      "type": "array",
      "items": {
        "$ref": "Block.schema.json"
      }
    },
    "replacement": {
      "@id": "stencila:replacement",
      "description": "The new replacement block content.",
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "Block.schema.json"
      }
    }
  }
}