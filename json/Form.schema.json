{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/Form.schema.json",
  "@id": "stencila:Form",
  "title": "Form",
  "nick": "frm",
  "extends": [
    "Executable"
  ],
  "category": "flow",
  "description": "A form to batch updates in document parameters.",
  "status": "under-development",
  "required": [
    "type",
    "content"
  ],
  "core": [
    "id",
    "autoExec"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "autoExec": {
      "@id": "stencila:autoExec",
      "description": "Under which circumstances the code should be automatically executed.",
      "aliases": [
        "auto",
        "auto-exec",
        "auto_exec"
      ],
      "strip": [
        "execution"
      ],
      "$ref": "AutomaticExecution.schema.json"
    },
    "compilationDigest": {
      "@id": "stencila:compilationDigest",
      "description": "A digest of the content, semantics and dependencies of the node.",
      "aliases": [
        "compilation-digest",
        "compilation_digest"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "skip": true
      },
      "$ref": "CompilationDigest.schema.json"
    },
    "compilationMessages": {
      "@id": "stencila:compilationMessages",
      "description": "Messages generated while compiling the code.",
      "aliases": [
        "compilation-messages",
        "compilation_messages",
        "compilationMessage",
        "compilation-message",
        "compilation_message"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "CompilationMessage.schema.json"
      }
    },
    "executionDigest": {
      "@id": "stencila:executionDigest",
      "description": "The `compilationDigest` of the node when it was last executed.",
      "aliases": [
        "execution-digest",
        "execution_digest"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "skip": true
      },
      "$ref": "CompilationDigest.schema.json"
    },
    "executionDependencies": {
      "@id": "stencila:executionDependencies",
      "description": "The upstream dependencies of this node.",
      "aliases": [
        "execution-dependencies",
        "execution_dependencies",
        "executionDependency",
        "execution-dependency",
        "execution_dependency"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionDependency.schema.json"
      }
    },
    "executionDependants": {
      "@id": "stencila:executionDependants",
      "description": "The downstream dependants of this node.",
      "aliases": [
        "execution-dependants",
        "execution_dependants",
        "executionDependant",
        "execution-dependant",
        "execution_dependant"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionDependant.schema.json"
      }
    },
    "executionTags": {
      "@id": "stencila:executionTags",
      "description": "Tags in the code which affect its execution.",
      "aliases": [
        "execution-tags",
        "execution_tags",
        "executionTag",
        "execution-tag",
        "execution_tag"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionTag.schema.json"
      }
    },
    "executionCount": {
      "@id": "stencila:executionCount",
      "description": "A count of the number of times that the node has been executed.",
      "$comment": "Intended to increment with each successive execution of the node, including across sessions.\nNote that this differs to the `execution_count` in Jupyter Notebook format which is\nthe \"code cell's prompt number\" and which resets at the start of each new session.\n",
      "aliases": [
        "execution-count",
        "execution_count"
      ],
      "strip": [
        "execution"
      ],
      "type": "integer",
      "minimum": 0.0
    },
    "executionRequired": {
      "@id": "stencila:executionRequired",
      "description": "Whether, and why, the code requires execution or re-execution.",
      "aliases": [
        "execution-required",
        "execution_required"
      ],
      "strip": [
        "execution"
      ],
      "$ref": "ExecutionRequired.schema.json"
    },
    "executionStatus": {
      "@id": "stencila:executionStatus",
      "description": "Status of the most recent, including any current, execution.",
      "aliases": [
        "execution-status",
        "execution_status"
      ],
      "strip": [
        "execution"
      ],
      "$ref": "ExecutionStatus.schema.json"
    },
    "executionActor": {
      "@id": "stencila:executionActor",
      "description": "The id of the actor that the node was last executed by.",
      "aliases": [
        "execution-actor",
        "execution_actor"
      ],
      "strip": [
        "execution"
      ],
      "type": "string"
    },
    "executionEnded": {
      "@id": "stencila:executionEnded",
      "description": "The timestamp when the last execution ended.",
      "aliases": [
        "execution-ended",
        "execution_ended"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "with": "Timestamp::to_dom_attr"
      },
      "$ref": "Timestamp.schema.json"
    },
    "executionDuration": {
      "@id": "stencila:executionDuration",
      "description": "Duration of the last execution.",
      "aliases": [
        "execution-duration",
        "execution_duration"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "with": "Duration::to_dom_attr"
      },
      "$ref": "Duration.schema.json"
    },
    "executionMessages": {
      "@id": "stencila:executionMessages",
      "description": "Messages emitted while executing the node.",
      "aliases": [
        "execution-messages",
        "execution_messages",
        "executionMessage",
        "execution-message",
        "execution_message"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionMessage.schema.json"
      }
    },
    "content": {
      "@id": "stencila:content",
      "description": "The content within the form, usually containing at least one `Parameter`.",
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "Block.schema.json"
      }
    },
    "deriveFrom": {
      "@id": "stencila:deriveFrom",
      "description": "The dotted path to the object (e.g a database table) that the form should be derived from",
      "aliases": [
        "derive-from",
        "derive_from"
      ],
      "type": "string"
    },
    "deriveAction": {
      "@id": "stencila:deriveAction",
      "description": "The action (create, update or delete) to derive for the form",
      "aliases": [
        "derive-action",
        "derive_action"
      ],
      "$ref": "FormDeriveAction.schema.json"
    },
    "deriveItem": {
      "@id": "stencila:deriveItem",
      "description": "An identifier for the item to be the target of Update or Delete actions",
      "aliases": [
        "derive-item",
        "derive_item"
      ],
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "string"
        }
      ]
    }
  }
}