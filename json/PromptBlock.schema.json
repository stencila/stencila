{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/PromptBlock.schema.json",
  "@id": "stencila:PromptBlock",
  "title": "PromptBlock",
  "nick": "prb",
  "extends": [
    "Executable"
  ],
  "category": "edits",
  "description": "A preview of how a prompt will be rendered at a location in the document",
  "$comment": "Used on an `Instruction` to render a prompt and display the rendering to the user.\nCan also be used standalone to preview how a prompt is rendered at a particular\nposition in a document.\n",
  "status": "experimental",
  "patch": {
    "applyWith": "PromptBlock::apply_patch_op"
  },
  "markdown": {
    "derive": false
  },
  "required": [
    "type"
  ],
  "core": [
    "id",
    "executionMode",
    "executionBounds",
    "instructionType",
    "nodeTypes",
    "relativePosition",
    "query",
    "target",
    "content"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "executionMode": {
      "@id": "stencila:executionMode",
      "description": "Under which circumstances the node should be executed.",
      "aliases": [
        "execution-mode",
        "execution_mode"
      ],
      "strip": [
        "execution"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd",
          "latex"
        ]
      },
      "$ref": "ExecutionMode.schema.json"
    },
    "executionBounds": {
      "@id": "stencila:executionBounds",
      "description": "Under which circumstances child nodes should be executed.",
      "aliases": [
        "execution-bounds",
        "execution_bounds"
      ],
      "strip": [
        "execution"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd",
          "latex"
        ]
      },
      "$ref": "ExecutionBounds.schema.json"
    },
    "compilationDigest": {
      "@id": "stencila:compilationDigest",
      "description": "A digest of the content, semantics and dependencies of the node.",
      "aliases": [
        "compilation-digest",
        "compilation_digest"
      ],
      "strip": [
        "compilation"
      ],
      "dom": {
        "skip": true
      },
      "$ref": "CompilationDigest.schema.json"
    },
    "compilationMessages": {
      "@id": "stencila:compilationMessages",
      "description": "Messages generated while compiling the code.",
      "aliases": [
        "compilation-messages",
        "compilation_messages",
        "compilationMessage",
        "compilation-message",
        "compilation_message"
      ],
      "strip": [
        "compilation"
      ],
      "dom": {
        "elem": "span"
      },
      "type": "array",
      "items": {
        "$ref": "CompilationMessage.schema.json"
      }
    },
    "executionDigest": {
      "@id": "stencila:executionDigest",
      "description": "The `compilationDigest` of the node when it was last executed.",
      "aliases": [
        "execution-digest",
        "execution_digest"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "skip": true
      },
      "$ref": "CompilationDigest.schema.json"
    },
    "executionDependencies": {
      "@id": "stencila:executionDependencies",
      "description": "The upstream dependencies of this node.",
      "aliases": [
        "execution-dependencies",
        "execution_dependencies",
        "executionDependency",
        "execution-dependency",
        "execution_dependency"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "span"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionDependency.schema.json"
      }
    },
    "executionDependants": {
      "@id": "stencila:executionDependants",
      "description": "The downstream dependants of this node.",
      "aliases": [
        "execution-dependants",
        "execution_dependants",
        "executionDependant",
        "execution-dependant",
        "execution_dependant"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "span"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionDependant.schema.json"
      }
    },
    "executionTags": {
      "@id": "stencila:executionTags",
      "description": "Tags in the code which affect its execution.",
      "aliases": [
        "execution-tags",
        "execution_tags",
        "executionTag",
        "execution-tag",
        "execution_tag"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "span"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionTag.schema.json"
      }
    },
    "executionCount": {
      "@id": "stencila:executionCount",
      "description": "A count of the number of times that the node has been executed.",
      "$comment": "Intended to increment with each successive execution of the node, including across sessions.\nNote that this differs to the `execution_count` in Jupyter Notebook format which is\nthe \"code cell's prompt number\" and which resets at the start of each new session.\n",
      "aliases": [
        "execution-count",
        "execution_count"
      ],
      "strip": [
        "execution"
      ],
      "type": "integer",
      "minimum": 0.0
    },
    "executionRequired": {
      "@id": "stencila:executionRequired",
      "description": "Whether, and why, the code requires execution or re-execution.",
      "aliases": [
        "execution-required",
        "execution_required"
      ],
      "strip": [
        "execution"
      ],
      "$ref": "ExecutionRequired.schema.json"
    },
    "executionStatus": {
      "@id": "stencila:executionStatus",
      "description": "Status of the most recent, including any current, execution.",
      "aliases": [
        "execution-status",
        "execution_status"
      ],
      "strip": [
        "execution"
      ],
      "$ref": "ExecutionStatus.schema.json"
    },
    "executionInstance": {
      "@id": "stencila:executionInstance",
      "description": "The id of the kernel instance that performed the last execution.",
      "$comment": "Used to help identify whether execution is required due to the last execution\nbeing in a difference instance (e.g. after a kernel restart).\n",
      "aliases": [
        "execution-instance",
        "execution_instance"
      ],
      "strip": [
        "execution"
      ],
      "type": "string"
    },
    "executionBounded": {
      "@id": "stencila:executionBounded",
      "description": "The bounds, if any, on the last execution.",
      "aliases": [
        "execution-bounded",
        "execution_bounded"
      ],
      "strip": [
        "execution"
      ],
      "$ref": "ExecutionBounds.schema.json"
    },
    "executionEnded": {
      "@id": "stencila:executionEnded",
      "description": "The timestamp when the last execution ended.",
      "aliases": [
        "execution-ended",
        "execution_ended"
      ],
      "strip": [
        "execution",
        "timestamps"
      ],
      "dom": {
        "with": "Timestamp::to_dom_attr"
      },
      "$ref": "Timestamp.schema.json"
    },
    "executionDuration": {
      "@id": "stencila:executionDuration",
      "description": "Duration of the last execution.",
      "aliases": [
        "execution-duration",
        "execution_duration"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "with": "Duration::to_dom_attr"
      },
      "$ref": "Duration.schema.json"
    },
    "executionMessages": {
      "@id": "stencila:executionMessages",
      "description": "Messages emitted while executing the node.",
      "aliases": [
        "execution-messages",
        "execution_messages",
        "executionMessage",
        "execution-message",
        "execution_message"
      ],
      "strip": [
        "execution"
      ],
      "dom": {
        "elem": "span"
      },
      "type": "array",
      "items": {
        "$ref": "ExecutionMessage.schema.json"
      }
    },
    "instructionType": {
      "@id": "stencila:instructionType",
      "description": "The type of instruction the  being used for",
      "$comment": "Used to filter and select the `target` prompt.",
      "aliases": [
        "instruction-type",
        "instruction_type"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "qmd"
        ]
      },
      "$ref": "InstructionType.schema.json"
    },
    "nodeTypes": {
      "@id": "stencila:nodeTypes",
      "description": "The type of nodes the prompt is being used for",
      "$comment": "Used to filter and select the `target` prompt.",
      "aliases": [
        "node-types",
        "node_types",
        "nodeType",
        "node-type",
        "node_type"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "qmd"
        ]
      },
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "relativePosition": {
      "@id": "stencila:relativePosition",
      "description": "The relative position of the node being edited, described etc.",
      "aliases": [
        "relative-position",
        "relative_position"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "qmd"
        ]
      },
      "$ref": "RelativePosition.schema.json"
    },
    "query": {
      "@id": "stencila:query",
      "description": "A user text query used to infer the `target` prompt",
      "patch": {
        "formats": [
          "md",
          "smd",
          "qmd"
        ]
      },
      "type": "string"
    },
    "target": {
      "@id": "schema:target",
      "description": "An identifier for the prompt to be rendered",
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "proptest": {
        "min": {
          "description": "No prompt",
          "value": "None"
        },
        "high": {
          "description": "Generate an arbitrary id using expected characters",
          "strategy": "option::of(r\"[a-zA-Z][a-zA-Z\\-_/.@]\")"
        },
        "max": {
          "description": "Generate an arbitrary prompt id using any characters",
          "strategy": "option::of(String::arbitrary())"
        }
      },
      "type": "string"
    },
    "directory": {
      "@id": "stencila:directory",
      "description": "The home directory of the prompt",
      "strip": [
        "compilation"
      ],
      "patch": {
        "formats": []
      },
      "dom": {
        "skip": true
      },
      "type": "string"
    },
    "content": {
      "@id": "stencila:content",
      "description": "The executed content of the prompt",
      "strip": [
        "output"
      ],
      "patch": {
        "formats": []
      },
      "dom": {
        "elem": "div"
      },
      "type": "array",
      "items": {
        "$ref": "Block.schema.json"
      }
    }
  }
}