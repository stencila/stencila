{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/Section.schema.json",
  "@id": "stencila:Section",
  "title": "Section",
  "extends": [
    "Entity"
  ],
  "category": "prose",
  "description": "A section of a document.",
  "proptest": {},
  "html": {
    "elem": "section",
    "special": true
  },
  "jats": {
    "elem": "sec"
  },
  "markdown": {
    "derive": false
  },
  "required": [
    "type",
    "content"
  ],
  "core": [
    "id",
    "sectionType"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "content": {
      "@id": "stencila:content",
      "description": "The content within the section.",
      "proptest": {
        "min": {
          "description": "An empty vector",
          "value": "Vec::new()"
        },
        "low": {
          "description": "Generate an arbitrary heading and an arbitrary paragraph.",
          "strategy": "vec_heading_paragraph()"
        },
        "high": {
          "description": "Generate up to four arbitrary, non-recursive, block nodes.",
          "strategy": "vec_blocks_non_recursive(4)"
        },
        "max": {
          "description": "Generate up to eight arbitrary, non-recursive, block nodes.",
          "strategy": "vec_blocks_non_recursive(8)"
        }
      },
      "type": "array",
      "items": {
        "$ref": "Block.schema.json"
      }
    },
    "sectionType": {
      "@id": "stencila:sectionType",
      "description": "The type of section.",
      "aliases": [
        "section-type",
        "section_type"
      ],
      "proptest": {
        "min": {
          "description": "No type.",
          "value": "None"
        },
        "low": {
          "description": "Generate an arbitrary section type.",
          "strategy": "option::of(SectionType::arbitrary())"
        }
      },
      "jats": {
        "attr": "content-type"
      },
      "$ref": "SectionType.schema.json"
    }
  }
}