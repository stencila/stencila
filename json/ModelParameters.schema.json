{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/ModelParameters.schema.json",
  "@id": "stencila:ModelParameters",
  "title": "ModelParameters",
  "nick": "mdp",
  "extends": [
    "Entity"
  ],
  "description": "Model selection and inference parameters for generative AI models.",
  "markdown": {
    "derive": false
  },
  "required": [
    "type"
  ],
  "core": [
    "id",
    "modelIds",
    "replicates",
    "qualityWeight",
    "costWeight",
    "speedWeight",
    "minimumScore",
    "temperature",
    "randomSeed"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "modelIds": {
      "@id": "stencila:modelIds",
      "description": "The ids of the models to select.",
      "$comment": "Each item can be a partial model id string (e.g. \"gpt\"). The first model found that equals\nof includes the string will be used.\n",
      "aliases": [
        "models",
        "model",
        "model-ids",
        "model_ids",
        "modelId",
        "model-id",
        "model_id"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "serde": {
        "default": false,
        "deserializeWith": "option_csv_or_array"
      },
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "replicates": {
      "@id": "stencila:replicates",
      "description": "The number of replicate inferences to run per model id.",
      "aliases": [
        "reps"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "$ref": "UnsignedInteger.schema.json"
    },
    "qualityWeight": {
      "@id": "stencila:qualityWeight",
      "description": "The relative weighting given to model quality (0-100).",
      "aliases": [
        "quality",
        "qual",
        "quality-weight",
        "quality_weight"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "$ref": "UnsignedInteger.schema.json"
    },
    "costWeight": {
      "@id": "stencila:costWeight",
      "description": "The relative weighting given to model cost (0-100).",
      "aliases": [
        "cost",
        "cost-weight",
        "cost_weight"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "$ref": "UnsignedInteger.schema.json"
    },
    "speedWeight": {
      "@id": "stencila:speedWeight",
      "description": "The relative weighting given to model speed (0-100).",
      "aliases": [
        "speed",
        "speed-weight",
        "speed_weight"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "$ref": "UnsignedInteger.schema.json"
    },
    "minimumScore": {
      "@id": "stencila:minimumScore",
      "description": "The minimum score for models to be selected (0-100).",
      "aliases": [
        "minimum-score",
        "minimum_score",
        "minScore",
        "min-score",
        "min_score"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "$ref": "UnsignedInteger.schema.json"
    },
    "temperature": {
      "@id": "stencila:temperature",
      "description": "The temperature option for model inference (0-100).",
      "$comment": "The lower the temperature, the more deterministic the output because the most\nprobable next token is more likely to be picked. Increasing temperature generally leads\nto more diverse and creative outputs.\n",
      "aliases": [
        "temp"
      ],
      "patch": {
        "formats": [
          "md",
          "smd",
          "myst",
          "ipynb",
          "qmd"
        ]
      },
      "$ref": "UnsignedInteger.schema.json"
    },
    "randomSeed": {
      "@id": "stencila:randomSeed",
      "description": "The random seed used for the model (if possible)",
      "aliases": [
        "random-seed",
        "random_seed",
        "rand-seed",
        "rand_seed",
        "seed"
      ],
      "type": "integer"
    }
  }
}