// Generated file; do not edit. See `schema-gen` crate.

use common::{
    eyre::{bail, Report},
    serde::Serialize,
    strum::{Display, EnumIter, EnumString},
};

use node_id::NodeId;

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Serialize, Display, EnumString, EnumIter)]
#[serde(crate = "common::serde")]
#[strum(crate = "common::strum")]
pub enum NodeType {
    Null,
    Boolean,
    Integer,
    UnsignedInteger,
    Number,
    String,
    Cord,
    Array,
    Admonition,
    Annotation,
    ArrayHint,
    ArrayValidator,
    Article,
    AudioObject,
    AuthorRole,
    BooleanValidator,
    Brand,
    Button,
    CallArgument,
    CallBlock,
    Chat,
    ChatMessage,
    ChatMessageGroup,
    Citation,
    CitationGroup,
    Claim,
    CodeBlock,
    CodeChunk,
    CodeExpression,
    CodeInline,
    CodeLocation,
    Collection,
    Comment,
    CompilationDigest,
    CompilationMessage,
    ConstantValidator,
    ContactPoint,
    CreativeWork,
    Datatable,
    DatatableColumn,
    DatatableColumnHint,
    DatatableHint,
    Date,
    DateTime,
    DateTimeValidator,
    DateValidator,
    DefinedTerm,
    Directory,
    Duration,
    DurationValidator,
    Emphasis,
    EnumValidator,
    Enumeration,
    Excerpt,
    ExecutionDependant,
    ExecutionDependency,
    ExecutionMessage,
    ExecutionTag,
    Figure,
    File,
    ForBlock,
    Form,
    Function,
    Grant,
    Heading,
    IfBlock,
    IfBlockClause,
    ImageObject,
    IncludeBlock,
    InstructionBlock,
    InstructionInline,
    InstructionMessage,
    IntegerValidator,
    Link,
    List,
    ListItem,
    MathBlock,
    MathInline,
    MediaObject,
    ModelParameters,
    MonetaryGrant,
    Note,
    NumberValidator,
    ObjectHint,
    Organization,
    Paragraph,
    Parameter,
    Periodical,
    Person,
    PostalAddress,
    Product,
    Prompt,
    PromptBlock,
    PropertyValue,
    ProvenanceCount,
    PublicationIssue,
    PublicationVolume,
    QuoteBlock,
    QuoteInline,
    RawBlock,
    Reference,
    Review,
    Section,
    Sentence,
    SoftwareApplication,
    SoftwareSourceCode,
    Strikeout,
    StringHint,
    StringValidator,
    Strong,
    StyledBlock,
    StyledInline,
    Subscript,
    SuggestionBlock,
    SuggestionInline,
    Superscript,
    Table,
    TableCell,
    TableRow,
    Text,
    ThematicBreak,
    Thing,
    Time,
    TimeValidator,
    Timestamp,
    TimestampValidator,
    TupleValidator,
    Underline,
    Unknown,
    Variable,
    VideoObject,
    Walkthrough,
    WalkthroughStep,
    Object,

    /// Special node type for configuration structs
    Config
}


impl TryFrom<&NodeId> for NodeType {
    type Error = Report;

    #[forbid(unreachable_patterns)]
    fn try_from(value: &NodeId) -> Result<Self, Self::Error> {
        use NodeType::*;
        Ok(match value.nick() {
            "adm" => Admonition,
            "ann" => Annotation,
            "arr" => Array,
            "arh" => ArrayHint,
            "arv" => ArrayValidator,
            "art" => Article,
            "aud" => AudioObject,
            "aut" => AuthorRole,
            "boo" => Boolean,
            "bov" => BooleanValidator,
            "bra" => Brand,
            "but" => Button,
            "cla" => CallArgument,
            "clb" => CallBlock,
            "cht" => Chat,
            "chm" => ChatMessage,
            "cmg" => ChatMessageGroup,
            "cit" => Citation,
            "ctg" => CitationGroup,
            "clm" => Claim,
            "cdb" => CodeBlock,
            "cdc" => CodeChunk,
            "cde" => CodeExpression,
            "cdi" => CodeInline,
            "cdl" => CodeLocation,
            "col" => Collection,
            "com" => Comment,
            "cmd" => CompilationDigest,
            "cme" => CompilationMessage,
            "cov" => ConstantValidator,
            "con" => ContactPoint,
            "cor" => Cord,
            "cre" => CreativeWork,
            "dtb" => Datatable,
            "dtc" => DatatableColumn,
            "dch" => DatatableColumnHint,
            "dth" => DatatableHint,
            "dae" => Date,
            "dti" => DateTime,
            "dtv" => DateTimeValidator,
            "dav" => DateValidator,
            "def" => DefinedTerm,
            "dir" => Directory,
            "dur" => Duration,
            "duv" => DurationValidator,
            "emp" => Emphasis,
            "env" => EnumValidator,
            "enu" => Enumeration,
            "exc" => Excerpt,
            "exd" => ExecutionDependant,
            "exy" => ExecutionDependency,
            "eme" => ExecutionMessage,
            "ext" => ExecutionTag,
            "fig" => Figure,
            "fil" => File,
            "frb" => ForBlock,
            "frm" => Form,
            "fun" => Function,
            "gra" => Grant,
            "hea" => Heading,
            "ifb" => IfBlock,
            "ibc" => IfBlockClause,
            "img" => ImageObject,
            "inc" => IncludeBlock,
            "isb" => InstructionBlock,
            "isi" => InstructionInline,
            "ime" => InstructionMessage,
            "int" => Integer,
            "inv" => IntegerValidator,
            "lin" => Link,
            "lst" => List,
            "lsi" => ListItem,
            "mtb" => MathBlock,
            "mti" => MathInline,
            "med" => MediaObject,
            "mdp" => ModelParameters,
            "mon" => MonetaryGrant,
            "not" => Note,
            "nul" => Null,
            "num" => Number,
            "nuv" => NumberValidator,
            "obj" => Object,
            "obh" => ObjectHint,
            "org" => Organization,
            "pgh" => Paragraph,
            "par" => Parameter,
            "pdl" => Periodical,
            "per" => Person,
            "pos" => PostalAddress,
            "prd" => Product,
            "pro" => Prompt,
            "prb" => PromptBlock,
            "prv" => PropertyValue,
            "prc" => ProvenanceCount,
            "pbi" => PublicationIssue,
            "pbv" => PublicationVolume,
            "qtb" => QuoteBlock,
            "qti" => QuoteInline,
            "raw" => RawBlock,
            "ref" => Reference,
            "rev" => Review,
            "sec" => Section,
            "sen" => Sentence,
            "sap" => SoftwareApplication,
            "ssc" => SoftwareSourceCode,
            "stk" => Strikeout,
            "str" => String,
            "sth" => StringHint,
            "stv" => StringValidator,
            "stg" => Strong,
            "stb" => StyledBlock,
            "sti" => StyledInline,
            "sub" => Subscript,
            "sgb" => SuggestionBlock,
            "sgi" => SuggestionInline,
            "sup" => Superscript,
            "tbl" => Table,
            "tbc" => TableCell,
            "tbr" => TableRow,
            "txt" => Text,
            "thb" => ThematicBreak,
            "thi" => Thing,
            "tme" => Time,
            "tmv" => TimeValidator,
            "tst" => Timestamp,
            "tsv" => TimestampValidator,
            "tuv" => TupleValidator,
            "und" => Underline,
            "unk" => Unknown,
            "uns" => UnsignedInteger,
            "var" => Variable,
            "vid" => VideoObject,
            "wkt" => Walkthrough,
            "wks" => WalkthroughStep,
            nick => bail!("Unknown node nick `{nick}`")
        })
    }
}
