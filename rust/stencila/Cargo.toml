[package]
name = "stencila"
version = "1.16.0"
authors = ["Stencila <hello@stenci.la>"]
edition = "2021"

[features]

cli = ["cli-utils", "exitcode"]
cli-pretty = ["cli-utils/pretty"]
cli-progress = ["cli-utils/progress"]
cli-interact = ["cli-utils/interact"]

# These features are needed for use in `cfg` attributes
# because features of dependencies e.g `codecs/cli` are
# not recognised there (it needs to be a feature of this crate)
documents-cli = ["documents/cli"]
tasks-cli = ["tasks/cli"]
codecs-cli = ["codecs/cli"]
parsers-cli = ["parsers/cli"]
kernels-cli = ["kernels/cli"]
binaries-cli = ["binaries/cli"]
providers-cli = ["providers/cli"]
images-cli = ["images/cli"]

server = [
  "jsonwebtoken",
  "mime_guess",
  "portpicker",
  "prometheus",
  "public-ip",
  "server-next",
  "sudo",
  "warp",
  "webbrowser",
  "key-utils",
  "tokio-stream",
]

upgrade = ["self_update"]

default = [
  # CLI
  "cli",
  "cli-progress",
  "cli-pretty",
  "cli-interact",

  # Documents
  "documents-cli",

  # Tasks
  "tasks-cli",

  # Codecs
  "codecs-cli",
  "codecs/codec-date",
  "codecs/codec-docx",
  "codecs/codec-gdoc",
  "codecs/codec-html",
  "codecs/codec-ipynb",
  "codecs/codec-json",
  "codecs/codec-json5",
  "codecs/codec-latex",
  "codecs/codec-md",
  "codecs/codec-pandoc",
  "codecs/codec-pdf",
  "codecs/codec-person",
  "codecs/codec-png",
  "codecs/codec-rmd",
  "codecs/codec-rpng",
  "codecs/codec-script",
  "codecs/codec-toml",
  "codecs/codec-txt",
  "codecs/codec-yaml",

  # Parsers
  "parsers-cli",
  "parsers/parser-bash",
  "parsers/parser-calc",
  "parsers/parser-http",
  "parsers/parser-js",
  "parsers/parser-json",
  "parsers/parser-json5",
  "parsers/parser-postgrest",
  "parsers/parser-prql",
  "parsers/parser-python",
  "parsers/parser-r",
  "parsers/parser-sql",
  "parsers/parser-tailwind",

  # Kernels
  "kernels-cli",
  "kernels/kernel-bash",
  "kernels/kernel-calc",
  "kernels/kernel-http",
  "kernels/kernel-node",
  "kernels/kernel-postgrest",
  "kernels/kernel-python",
  "kernels/kernel-r",
  "kernels/kernel-store",
  "kernels/kernel-sql",
  "kernels/kernel-tailwind",
  "kernels/kernel-zsh",

  # Binaries
  "binaries-cli",
  "binaries/binary-chrome",
  "binaries/binary-chromium",
  "binaries/binary-node",
  "binaries/binary-pandoc",
  "binaries/binary-podman",
  "binaries/binary-poetry",
  "binaries/binary-postgrest",
  "binaries/binary-python",
  "binaries/binary-r",
  "binaries/binary-task",

  # Providers
  "providers-cli",
  "providers/provider-doi",
  "providers/provider-elife",
  "providers/provider-gdrive",
  "providers/provider-github",
  "providers/provider-gitlab",
  "providers/provider-http",

  # Images
  "images-cli",

  # Server & upgrade
  "server",
  "upgrade",
]

[dependencies]

# Required external crates

handlebars = "4.3.3"
humantime = "2.1.0"
notify = "4.0.17"
schemars = { version = "0.8.8", features = ["preserve_order", "chrono"] }
stencila-schema = { path = "../schema" }
thiserror = "1.0.31"
tracing-appender = "0.2.2"
tracing-error = "0.2.0"
tracing-serde = "0.1.2"
tracing-subscriber = { version = "0.3.15", features = ["env-filter", "json"] }
validator = { version = "0.16.0", features = ["derive"] }

# Required internal crates

binaries = { path = "../binaries" }
cloud = { path = "../cloud" }
codecs = { path = "../codecs" }
common = { path = "../common" }
documents = { path = "../documents" }
events = { path = "../events" }
files = { path = "../files" }
graph = { path = "../graph" }
graph-triples = { path = "../graph-triples" }
http-utils = { path = "../http-utils" }
images = { path = "../images" }
kernels = { path = "../kernels" }
node-patch = { path = "../node-patch" }
parsers = { path = "../parsers" }
path-utils = { path = "../path-utils" }
providers = { path = "../providers" }
tasks = { path = "../tasks" }
utils = { path = "../utils" }
suids = { path = "../suids" }

# Optional crates related to `cli` feature

cli-utils = { path = "../cli-utils", optional = true }
exitcode = { version = "1.1.2", optional = true }

# Optional crates related to `server` feature

jsonwebtoken = { version = "8.1.0", optional = true }
key-utils = { path = "../key-utils", optional = true }
mime_guess = { version = "2.0.4", optional = true }
portpicker = { version = "0.1.1", optional = true }
prometheus = { version = "0.13.1", features = ["process"], optional = true }
public-ip = { version = "0.2.2", optional = true }
server-next = { path = "../server-next", optional = true }
sudo = { version = "0.6.0", optional = true }
tokio-stream = { version = "0.1.9", optional = true }
warp = { version = "0.3.3", optional = true }
webbrowser = { version = "0.7.1", optional = true }

# Optional crates related to `update` feature

self_update = { version = "0.31.0", optional = true, features = [
  "archive-tar",
  "archive-zip",
  "compression-flate2",
  "compression-zip-deflate",
] }

# Linux only crates

[target.'cfg(target_os = "linux")'.dependencies]
pty-process = { version = "0.2.0", features = ["backend-tokio"] }


[dev-dependencies]
test-utils = { path = "../test-utils" }
