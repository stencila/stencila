trigger:
  branches:
    include:
      - master
      - refs/tags/*

pr:
  drafts: false
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  CI: true
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: 14.x
    displayName: Install Node.js

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(npm_config_cache)
    displayName: Cache npm

  - script: npm ci
    displayName: Install dependencies

  - script: |
      npm run check:themes
      npm run lint
    displayName: Run linting
    failOnStderr: true

  - task: Npm@1
    displayName: Run unit tests
    inputs:
      command: 'custom'
      customCommand: 'run -s test:unit -- --coverage --ci --reporters=default --reporters=jest-junit'

  - script: bash <(curl -s https://codecov.io/bash)
    displayName: Report test coverage
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: Upload test results to CI
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'junit.xml'
      failTaskOnFailedTests: true

  - script: |
      npm run docs
      npm run test:visual
      npx percy upload test/screenshots/local
    displayName: Run visual regression tests
    condition: and(ne(variables['SAUCE_ACCESS_KEY'], ''), ne(variables['PERCY_TOKEN'], ''), not(contains(variables['Build.SourceBranch'], 'renovate')))
    env:
      PERCY_TOKEN: $(PERCY_TOKEN)
      SAUCE_ACCESS_KEY: $(SAUCE_ACCESS_KEY)
      SAUCE_USERNAME: $(SAUCE_USERNAME)

  - script: npm run build
    condition: succeeded()
    displayName: 'Build package'

  - script: ASSET_PATH=/thema/ npm run docs
    condition: succeeded()
    displayName: 'Build documentation site'

  - script: npx semantic-release
    condition: and(succeeded(), eq(variables.isMain, true))
    displayName: Release package & Publish documentation site
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)
      NPM_TOKEN: $(NPM_TOKEN)
